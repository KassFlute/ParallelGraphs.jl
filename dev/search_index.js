var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ParallelGraphs","category":"page"},{"location":"#ParallelGraphs","page":"Home","title":"ParallelGraphs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ParallelGraphs.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ParallelGraphs]","category":"page"},{"location":"#ParallelGraphs.bfs-Tuple{Graphs.AbstractGraph, Integer}","page":"Home","title":"ParallelGraphs.bfs","text":"bfs(graph::AbstractGraph, source::Integer)\n\nPerform a breadth-first search on graph starting from vertex source. Return a vector of vertices in the order they were visited.\n\nExample\n\ng = SimpleGraph(4)\nadd_edge!(g, 1, 2)\nadd_edge!(g, 2, 3)\nadd_edge!(g, 3, 4)\nadd_edge!(g, 4, 1)\nbfs(g, 1) # returns [1, 2, 4, 3]\n\n\n\n\n\n","category":"method"},{"location":"#ParallelGraphs.return_true-Tuple{}","page":"Home","title":"ParallelGraphs.return_true","text":"return_true()\n\nAlways return the boolean true.\n\nSee also\n\nnothing\n\n\n\n\n\n","category":"method"}]
}
